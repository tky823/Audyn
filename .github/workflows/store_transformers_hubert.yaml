name: Store input and output of official HuBERT
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  package:
    name: Run package tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - mados-13
          - macos-latest
          - windows-latest
        python-version:
          - "3.12"
        torch-version:
          - "2.6.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone transformers
        run: |
          cd tests/scripts/
          git clone --depth 1 https://github.com/huggingface/transformers.git
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          . tests/scripts/install_ubuntu_dependencies.sh
      - name: Show version of FFmpeg
        run: |
          ffmpeg -version
      - name: Overwrite torch version in pyproject.toml
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python tests/scripts/overwrite_pyproject_toml.py --path pyproject.toml --torch-version ${TORCH_VERSION}
      - name: Install dependencies
        env:
          MACOSX_DEPLOYMENT_TARGET: '10.13'
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,tests]"
      - name: Install dependencies
        run: |
          cd tests/scripts/transformers
          pip install -e "."
          pip install datasets librosa soundfile
      - name: Show dependencies
        run: |
          pip list
      - name: Verify version of torch
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python tests/scripts/verify_torch_version.py --torch-version ${TORCH_VERSION}
      - name: Show backend of torchaudio
        run: |
          python -c "import torchaudio; print(torchaudio.list_audio_backends())"
          python -c "import torchaudio; assert len(torchaudio.list_audio_backends()) > 0"
      - name: Run HuBERT in transformers
        run: |
          python tests/scripts/run_official_hubert.py
      - name: Upload artifact
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: official_hubert
          path: test_official_hubert.pth
      - name: Pytest
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          pytest -vvv --log-cli-level=ERROR tests/package/models/test_hubert.py
