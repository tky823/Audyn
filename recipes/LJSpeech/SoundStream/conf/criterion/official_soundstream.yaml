generator:
  _target_: audyn.criterion.MultiCriteria
  waveform_fm:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.FeatureMatchingLoss
    weight: 100
    key_mapping:
      estimated:
        input: waveform_fake_feature_map
        target: waveform_real_feature_map
      target:
  spectrogram_fm:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.FeatureMatchingLoss
    weight: 100
    key_mapping:
      estimated:
        input: spectrogram_fake_feature_map
        target: spectrogram_real_feature_map
      target:
  waveform_adversarial:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.DiscriminatorHingeLoss
      minimize: false
      margin: 1
      reduction: mean
    weight: 1
    key_mapping:
      estimated:
        input: waveform_fake_prob
      target:
  spectrogram_adversarial:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.DiscriminatorHingeLoss
      minimize: false
      margin: 1
      reduction: mean
    weight: 1
    key_mapping:
      estimated:
        input: spectrogram_fake_prob
      target:
  reconstruction:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.distance.MultiScaleSpectralLoss
      n_fft:
        # You can change values.
        - 512
        - 512
        - 1024
        - 1024
        - 2048
        - 2048
      win_length:
        - 64
        - 128
        - 256
        - 512
        - 1024
        - 2048
      hop_length:
        - 16
        - 32
        - 64
        - 128
        - 256
        - 512
      transform:
        _target_: torch.nn.ModuleList
        _args_:
          - - _target_: torchaudio.transforms.MelSpectrogram
              sample_rate: ${data.audio.sample_rate}
              n_mels: 64
              n_fft: ${.....n_fft.0}
              win_length: ${.....win_length.0}
              hop_length: ${.....hop_length.0}
            - _target_: torchaudio.transforms.MelSpectrogram
              sample_rate: ${data.audio.sample_rate}
              n_mels: ${..0.n_mels}
              n_fft: ${.....n_fft.1}
              win_length: ${.....win_length.1}
              hop_length: ${.....hop_length.1}
            - _target_: torchaudio.transforms.MelSpectrogram
              sample_rate: ${data.audio.sample_rate}
              n_mels: ${..0.n_mels}
              n_fft: ${.....n_fft.2}
              win_length: ${.....win_length.2}
              hop_length: ${.....hop_length.2}
            - _target_: torchaudio.transforms.MelSpectrogram
              sample_rate: ${data.audio.sample_rate}
              n_mels: ${..0.n_mels}
              n_fft: ${.....n_fft.3}
              win_length: ${.....win_length.3}
              hop_length: ${.....hop_length.3}
            - _target_: torchaudio.transforms.MelSpectrogram
              sample_rate: ${data.audio.sample_rate}
              n_mels: ${..0.n_mels}
              n_fft: ${.....n_fft.4}
              win_length: ${.....win_length.4}
              hop_length: ${.....hop_length.4}
            - _target_: torchaudio.transforms.MelSpectrogram
              sample_rate: ${data.audio.sample_rate}
              n_mels: ${..0.n_mels}
              n_fft: ${.....n_fft.5}
              win_length: ${.....win_length.5}
              hop_length: ${.....hop_length.5}
    weight: 1
    key_mapping:
      estimated:
        input: estimated_waveform_slice
      target:
        target: waveform_slice
  codebook_entropy:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.rvqvae.CodebookEntropyLoss
      codebook_size: ${data.codebook.size}
    weight: 0  # monitoring
    key_mapping:
      estimated:
        input: codebook_indices
      target:
  codebook_loss:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.vqvae.CodebookLoss
    weight: 1
    key_mapping:
      estimated:
        encoded: residual
        quantized: quantized
      target:
discriminator:
  _target_: audyn.criterion.MultiCriteria
  waveform_discriminator_fake:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.DiscriminatorHingeLoss
      minimize: true
      margin: ${....generator.waveform_adversarial.criterion.margin}
      reduction: mean
    weight: 1
    key_mapping:
      estimated:
        input: waveform_fake_prob
      target:
  waveform_discriminator_real:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.DiscriminatorHingeLoss
      minimize: false
      margin: ${....generator.waveform_adversarial.criterion.margin}
      reduction: mean
    weight: 1
    key_mapping:
      estimated:
        input: waveform_real_prob
      target:
  spectrogram_discriminator_fake:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.DiscriminatorHingeLoss
      minimize: true
      margin: ${....generator.spectrogram_adversarial.criterion.margin}
      reduction: mean
    weight: 1
    key_mapping:
      estimated:
        input: spectrogram_fake_prob
      target:
  spectrogram_discriminator_real:
    _target_: audyn.criterion.BaseCriterionWrapper
    criterion:
      _target_: audyn.criterion.hifigan.DiscriminatorHingeLoss
      minimize: false
      margin: ${....generator.spectrogram_adversarial.criterion.margin}
      reduction: mean
    weight: 1
    key_mapping:
      estimated:
        input: spectrogram_real_prob
      target:
